5/29/2020

The crimson_code_access.py program is an evolution of the process_access_list.py program. It takes the access files for
buildings on campus, and determines who has entered the building with appropriate permissions, who has not, and who
has accessed from the 'grey' list.

Output file: There are four output files, all in the form of .csv files so that they can be read by a spreadsheet,
allowing the viewer to re-arrange the data and generate their own graphs. The files are

    SuspectAccess.csv, which has a list of the accesses from those who have not been approved;

    AllowedAccess.csv, which is a list of the accesses from those who have been approved;

    GreyAccess.csv, which is a list of accesses which were people on the 'grey' list

    BuildingAccess.csv, a list of total access by each building

Note that the GreyAccess may not be used; this is in as a safety valve for those using the program.

Input files:

The main input file is the log for building access. This is the same file that was used in process_access_list.py. As in
process_access_list, the records of this file will be used to create a list of access objects, that will be used to
check the access and will generate the output format.

The next file will be generated by the Crimson Clear program, run by HUIT. This will contain a record of all those who
have self-attested to not having symptoms, and a two-hour interval during which access to a building is allowed. There
may be more than one of these per day, so need to make this a list and check the whole list to see if the access is
in one of the allowed intervals.